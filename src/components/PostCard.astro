---
export interface Props {
  slug: string;
  title: string;
  description: string;
  date: Date;
  thumbnail?: string;
  categories?: string[];
}

const { slug, title, description, date, thumbnail, categories = [] } = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class="retro-card card-post">
  <a href={`/posts/${slug}`} class="card-link">
    {thumbnail && (
      <div class="card-image">
        <img 
          src={thumbnail}
          alt={title}
          loading="lazy"
        />
      </div>
    )}
    
    <div class="card-content">
      <header class="card-header">
        <h2 class="card-title">{title}</h2>
        
        <time 
          datetime={date.toISOString()}
          class="card-date"
        >
          {formatDate(date)}
        </time>
      </header>

      <p class="card-description">{description}</p>

      {categories.length > 0 && (
        <div class="card-categories">
          {categories.map(category => (
            <span class="category-tag">#{category}</span>
          ))}
        </div>
      )}

      <div class="card-footer">
        <span class="read-more">Leer más →</span>
        <span class="card-icon">✨</span>
      </div>
    </div>
  </a>
</article>

<style>
  .card-post {
    animation: fade-in-up 0.6s ease-out forwards;
    opacity: 0;
  }

  .card-post:nth-child(1) { animation-delay: 0.1s; }
  .card-post:nth-child(2) { animation-delay: 0.2s; }
  .card-post:nth-child(3) { animation-delay: 0.3s; }
  .card-post:nth-child(4) { animation-delay: 0.4s; }

  .card-link {
    display: block;
    color: inherit;
    text-decoration: none;
  }

  .card-image {
    aspect-ratio: 16 / 9;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .card-post:hover .card-image img {
    transform: scale(1.1);
  }

  .card-content {
    padding: 1.5rem;
  }

  .card-header {
    margin-bottom: 1rem;
  }

  .card-title {
    font-size: 1.25rem;
    font-weight: bold;
    margin: 0 0 0.5rem 0;
    transition: all 0.3s ease;
  }

  .card-post:hover .card-title {
    animation: neon-glow 0.8s ease-in-out infinite alternate;
  }

  .card-date {
    font-size: 0.875rem;
    color: var(--theme-muted);
    display: block;
    margin-bottom: 0.75rem;
  }

  .card-description {
    color: var(--theme-text-secondary);
    line-height: 1.6;
    margin-bottom: 1rem;
  }

  .card-categories {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .category-tag {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    border-radius: 9999px;
    background-color: var(--theme-card-bg);
    border: 1px solid var(--theme-accent);
    color: var(--theme-accent);
  }

  .card-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .read-more {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--theme-link);
    transition: all 0.3s ease;
  }

  .card-post:hover .read-more {
    animation: neon-glow 0.8s ease-in-out infinite alternate;
  }

  .card-icon {
    color: var(--theme-accent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .card-post:hover .card-icon {
    opacity: 1;
  }

  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>